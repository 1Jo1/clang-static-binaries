name: release

on:
  push
  # tags:
  #   - "[0-9]+.[0-9]+.[0-9]+*"

jobs:
  build-win-mac:
    name: build (${{ matrix.config.name }}, ${{ matrix.config.arch }})
    runs-on:
      ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - name: darwin
            os: macos-latest
            os-cmake-args: '-DCMAKE_CXX_FLAGS="-static-libgcc -static-libstdc++ -flto" -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 ${POSIX_CMAKE_ARGS}'
            build-args: '-j$(sysctl -n hw.ncpu)'
            # bindir: '/build/bin' # check if useful
            arch: amd64
          # - name: windows # TODO still to test
          #   os: windows-latest
          #   arch: 386
          #   extension: .exe
          - name: windows
            os: windows-latest
            os-cmake-args: '-Thost=x64 -DCMAKE_CXX_FLAGS="/MP /std:c++14" -DLLVM_USE_CRT_MINSIZEREL="MT"'
            build-args: '--config MinSizeRel'
            # bindir: '/build/MinSizeRel/bin' # check if useful
            arch: amd64
            extra-tar-args: '--exclude=${RELEASE}/clang/test/Driver/Inputs/* --exclude=${RELEASE}/libcxx/test/std/input.output/filesystems/Inputs/static_test_env/* --exclude=${RELEASE}/libclc/amdgcn-mesa3d'
            extension: .exe
    env:
      COMMON_CMAKE_ARGS: '-DBUILD_SHARED_LIBS=OFF -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra"'
      POSIX_CMAKE_ARGS: '-DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_CXX_COMPILER=g++-10 -DCMAKE_C_COMPILER=gcc-10'
      RELEASE: 'llvm-project-12.0.0.src'
    defaults:
      run:
        shell: bash
    steps:
    - name: get llvm-project
      run: curl -L https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/${RELEASE}.tar.xz | tar -xJ ${{ matrix.config.extra-tar-args }}

    - name: cmake
      run: | 
        cd ${RELEASE}
        mkdir build
        cd build
        cmake ../llvm ${{ env.COMMON_CMAKE_ARGS }} ${{ matrix.os-cmake-args }}

    - name: build
      run: cmake --build ${RELEASE}/build ${{ matrix.build-args }} --target clang-format clangd

    - name: upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: clang-tools
        path: bin/clang*
